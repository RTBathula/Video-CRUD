{"version":3,"sources":["../../src/routes/video.js"],"names":["validate","videoService","router","Router","post","createVideo","req","res","videoObj","body","name","keywords","result","status","json","send","get","getVideo","id","params","put","delete"],"mappings":"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","file":"video.js","sourcesContent":["import express from \"express\";\r\nimport * as validate from \"../validations/video\";\r\nimport * as videoService from \"../services/video\";\r\n\r\nconst router = express.Router();\r\n\r\n/*\r\n * Create video object\r\n */\r\nrouter.post(\"/\", validate.createVideo, async (req, res) => {\t\r\n    \r\n\tlet videoObj = req.body;  \r\n\r\n\ttry{\r\n\t\tlet result = await videoService.createVideo(videoObj.name, videoObj.keywords);\r\n\t\treturn res.status(201).json(result);\r\n\t}catch(err){\r\n\t\treturn res.status(400).send(err);\r\n\t}  \r\n}); \r\n\r\n/*\r\n * Get video object by id\r\n */\r\nrouter.get(\"/:id\", validate.getVideo, async (req, res) => {\t\r\n    \r\n\tlet id = req.params.id;  \r\n\r\n\ttry{\r\n\t\tlet result = await videoService.getVideo(id);\r\n\t\treturn res.status(200).json(result);\r\n\t}catch(err){\r\n\t\treturn res.status(400).send(err);\r\n\t}  \r\n});\r\n\r\n/*\r\n * Get video object by id\r\n */\r\nrouter.get(\"/\", validate.getVideo, async (req, res) => {\t\r\n    \r\n\tlet id = req.params.id;  \r\n\r\n\ttry{\r\n\t\tlet result = await videoService.getVideo(id);\r\n\t\treturn res.status(200).json(result);\r\n\t}catch(err){\r\n\t\treturn res.status(400).send(err);\r\n\t}  \r\n});\r\n\r\n/*\r\n * Get video object by id\r\n */\r\nrouter.put(\"/:id\", validate.getVideo, async (req, res) => {\t\r\n    \r\n\tlet id = req.params.id;  \r\n\r\n\ttry{\r\n\t\tlet result = await videoService.getVideo(id);\r\n\t\treturn res.status(200).json(result);\r\n\t}catch(err){\r\n\t\treturn res.status(400).send(err);\r\n\t}  \r\n});\r\n\r\n/*\r\n * Get video object by id\r\n */\r\nrouter.delete(\"/:id\", validate.getVideo, async (req, res) => {\t\r\n    \r\n\tlet id = req.params.id;  \r\n\r\n\ttry{\r\n\t\tlet result = await videoService.getVideo(id);\r\n\t\treturn res.status(200).json(result);\r\n\t}catch(err){\r\n\t\treturn res.status(400).send(err);\r\n\t}  \r\n});\r\n\r\nexport default router;\r\n"]}