{"version":3,"sources":["../../src/services/video.js"],"names":["createVideo","name","keywords","video","createdDate","Date","Promise","resolve","reject","save","err","reply"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;;AAGO,IAAMA;AAAA,qFAAc,iBAAOC,IAAP,EAAaC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAEtBC,WAFsB,GAEd,qBAFc;;AAG1BA,YAAMC,WAAN,GAAoB,IAAIC,IAAJ,EAApB;AACGF,YAAMF,IAAN,GAAaA,IAAb;AACAE,YAAMD,QAAN,GAAiBA,QAAjB;;AALuB,uCAOnB,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvCL,aAAMM,IAAN,CAAW,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACvB,YAAID,GAAJ,EAAS;AACR,gBAAOF,OAAOE,GAAP,CAAP;AACA;;AAEDH,gBAAQI,KAAR;AACH,QAND;AAOA,OARM,CAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAd;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"video.js","sourcesContent":["import Video from \"../models/video\";\r\n\r\n/**\r\n * @ Create video\r\n */\r\nexport const createVideo = async (name, keywords) => {               \r\n     \r\n\tlet video = new Video();\r\n\tvideo.createdDate = new Date();    \r\n    video.name = name;\r\n    video.keywords = keywords;\t\r\n\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tvideo.save((err, reply) => {\r\n\t\t    if (err) {\r\n\t\t    \treturn reject(err);  \r\n\t\t    }  \r\n\r\n\t\t    resolve(reply);\t\t      \r\n\t\t});\r\n\t}); \r\n}\r\n\r\n"]}