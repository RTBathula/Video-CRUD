{"version":3,"sources":["../../src/validations/video.js"],"names":["createVideo","req","res","next","videoObj","body","errorMsg","_isValidVideoObject","result","status","message","json","getVideoById","id","params","_isValidateId","updateVideoById","deleteVideoById","name","keywords","length"],"mappings":"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","file":"video.js","sourcesContent":["import {\r\n\tisJsonObject, \r\n\tisMongoObjectIdValid,\r\n\tisArray\r\n} from \"../helpers/util\";\r\n\r\nexport const createVideo = (req, res, next) => { \t\r\n\tlet videoObj = req.body || null; \t \r\n\r\n\tlet errorMsg = _isValidVideoObject(videoObj);\r\n\tif(errorMsg){\r\n\t\tlet result = {};\r\n\t\tresult.status = \"error\";\t\r\n\t\tresult.message = errorMsg;\t\r\n\t\treturn res.status(400).json(result);\r\n\t}\r\n\r\n\treturn next();\r\n}\r\n\r\nexport const getVideoById = (req, res, next) => { \t\t\r\n\tlet id = req.params.id; \t\t\r\n\r\n\tlet errorMsg = _isValidateId(id);\r\n\tif(errorMsg){\r\n\t\tlet result = {};\r\n\t\tresult.status = \"error\";\t\r\n\t\tresult.message = errorMsg;\t\r\n\t\treturn res.status(400).json(result);\r\n\t}\r\n\r\n\treturn next();\r\n}\r\n\r\nexport const updateVideoById = (req, res, next) => { \t\t\r\n\tlet id = req.params.id; \r\n\tlet videoObj = req.body || null; \r\n\t\t\r\n\tlet errorMsg = _isValidateId(id);\r\n\tif(errorMsg){\r\n\t\tlet result = {};\r\n\t\tresult.status = \"error\";\t\r\n\t\tresult.message = errorMsg;\t\r\n\t\treturn res.status(400).json(result);\r\n\t}\r\n\r\n\terrorMsg = _isValidVideoObject(videoObj);\r\n\tif(errorMsg){\r\n\t\tlet result = {};\r\n\t\tresult.status = \"error\";\t\r\n\t\tresult.message = errorMsg;\t\r\n\t\treturn res.status(400).json(result);\r\n\t}\r\n\r\n\treturn next();\r\n}\r\n\r\nexport const deleteVideoById = (req, res, next) => { \t\t\r\n\tlet id = req.params.id; \t\t\r\n\r\n\tlet errorMsg = _isValidateId(id);\r\n\tif(errorMsg){\r\n\t\tlet result = {};\r\n\t\tresult.status = \"error\";\t\r\n\t\tresult.message = errorMsg;\t\r\n\t\treturn res.status(400).json(result);\r\n\t}\r\n\r\n\treturn next();\r\n}\r\n\r\n//Private functions\r\nconst _isValidVideoObject = (videoObj) => { \t\r\n\r\n\tif(!isJsonObject(videoObj)){\r\n\t\treturn \"invalid video object\";\t\r\n\t}\r\n\r\n\tif(!videoObj.name){\t\t\r\n\t\treturn \"name is required\";\t\t\t\r\n\t}\r\n\r\n\tif(!videoObj.keywords){\t\t\r\n\t\treturn \"keywords is required\";\t\t\r\n\t}\r\n\r\n\tif(!isArray(videoObj.keywords)){\t\t\t\r\n\t\treturn \"keywords should be array\";\t\t\t\r\n\t}\r\n\r\n\tif(videoObj.keywords.length === 0){\t\t\t\r\n\t\treturn \"keywords should have atleast one keyword\";\t\t\t\r\n\t}\r\n\r\n\treturn null;\r\n}\t\r\n\r\nconst _isValidateId = (id) => { \t\r\n\r\n\tif(!id){\t\t\r\n\t\treturn \"id is required\";\t\t\t\r\n\t}\r\n\r\n\tif(!isMongoObjectIdValid(id)){\t\r\n\t\treturn \"invalid id\";\t\t\r\n\t}\r\n\r\n\treturn null;\r\n}"]}